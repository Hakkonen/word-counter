{"ast":null,"code":"var _jsxFileName = \"/Users/synesis/Documents/Developer/word-counter-by-jayden/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport script from './components/StarWars';\n\nfunction App() {\n  // Create object to place word-list in\n  // Fetch data from source\n  // Iterate over each word in list\n  //    If word is new add word to object\n  //    If word is repeated incremenet count for word\n  // Print list of word bubbles in order of usage\n  // MARK: Define text objects\n  // TODO\n  let words = {};\n  let count = 0;\n  let newWord = ''; // MARK: Get data\n  // TODO\n  // MARK: Iterate over words in list and place into new object\n\n  for (const char of script) {\n    // Saves me time\n    count += 1;\n\n    if (count > 1000) {\n      break;\n    } // Add string to new word until space\n\n\n    if (char !== \" \") {\n      newWord += char.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()\\n 0-9]/g, \"\").toLowerCase();\n    } else {\n      if (newWord.length > 1) {\n        if (words[newWord]) {\n          words[newWord] += 1;\n        } else {\n          words[newWord] = 1;\n        }\n\n        newWord = '';\n      }\n    }\n  } // for(const word of words) {\n  //   console.log(word)\n  // }\n  // Order words\n\n\n  let i = 0;\n\n  for (const word in words) {\n    console.log(Object.keys(words)[i]); // console.log(Object.values(words)[i])  \n\n    i += 1;\n  }\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"Hello world!\");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/synesis/Documents/Developer/word-counter-by-jayden/src/App.js"],"names":["React","script","App","words","count","newWord","char","replace","toLowerCase","length","i","word","console","log","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,SAASC,GAAT,GAAe;AACb;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,OAAO,GAAG,EAAd,CAZa,CAcb;AACA;AAEA;;AACA,OAAI,MAAMC,IAAV,IAAkBL,MAAlB,EAA0B;AACxB;AACAG,IAAAA,KAAK,IAAI,CAAT;;AACA,QAAGA,KAAK,GAAG,IAAX,EAAiB;AAAC;AAAM,KAHA,CAKxB;;;AACA,QAAGE,IAAI,KAAK,GAAZ,EAAiB;AACfD,MAAAA,OAAO,IAAIC,IAAI,CAACC,OAAL,CAAa,oCAAb,EAAmD,EAAnD,EAAuDC,WAAvD,EAAX;AACD,KAFD,MAEO;AACL,UAAGH,OAAO,CAACI,MAAR,GAAiB,CAApB,EAAuB;AACrB,YAAGN,KAAK,CAACE,OAAD,CAAR,EAAmB;AACjBF,UAAAA,KAAK,CAACE,OAAD,CAAL,IAAkB,CAAlB;AACD,SAFD,MAEO;AACLF,UAAAA,KAAK,CAACE,OAAD,CAAL,GAAiB,CAAjB;AACD;;AACDA,QAAAA,OAAO,GAAG,EAAV;AACD;AACF;AACF,GApCY,CAsCb;AACA;AACA;AAEA;;;AACA,MAAIK,CAAC,GAAG,CAAR;;AACA,OAAI,MAAMC,IAAV,IAAkBR,KAAlB,EAAyB;AACvBS,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYZ,KAAZ,EAAmBO,CAAnB,CAAZ,EADuB,CAEvB;;AACAA,IAAAA,CAAC,IAAI,CAAL;AACD;;AAGD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD;;AAED,eAAeR,GAAf","sourcesContent":["import React from 'react'\nimport './App.css'\nimport script from './components/StarWars'\n\nfunction App() {\n  // Create object to place word-list in\n  // Fetch data from source\n  // Iterate over each word in list\n  //    If word is new add word to object\n  //    If word is repeated incremenet count for word\n  // Print list of word bubbles in order of usage\n\n  // MARK: Define text objects\n  // TODO\n  let words = {}\n  let count = 0\n  let newWord = ''\n\n  // MARK: Get data\n  // TODO\n\n  // MARK: Iterate over words in list and place into new object\n  for(const char of script) {\n    // Saves me time\n    count += 1\n    if(count > 1000) {break}\n    \n    // Add string to new word until space\n    if(char !== \" \") {\n      newWord += char.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()\\n 0-9]/g, \"\").toLowerCase()\n    } else {\n      if(newWord.length > 1) {\n        if(words[newWord]) {\n          words[newWord] += 1\n        } else {\n          words[newWord] = 1\n        }\n        newWord = ''\n      }\n    }\n  }\n\n  // for(const word of words) {\n  //   console.log(word)\n  // }\n\n  // Order words\n  let i = 0\n  for(const word in words) {\n    console.log(Object.keys(words)[i])  \n    // console.log(Object.values(words)[i])  \n    i += 1\n  }\n  \n\n  return (\n    <h1>Hello world!</h1>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}