{"ast":null,"code":"var _jsxFileName = \"/Users/synesis/Documents/Developer/word-counter-by-jayden/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport script from './components/StarWars';\nimport { Button, Jumbotron } from 'react-bootstrap';\n\nfunction App() {\n  const [totalWords, setTotalWords] = useState(80); // MARK: Define text objects\n\n  let words = {};\n  let newWord = ''; // MARK: Get data\n  // MARK: Iterate over words in list and place into new object\n\n  for (const char of script) {\n    if (char !== \" \") {\n      newWord += char.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()\\n 0-9]/g, \"\").toLowerCase();\n    } else {\n      if (newWord.length > 1) {\n        if (words[newWord]) {\n          words[newWord] += 1;\n        } else {\n          words[newWord] = 1;\n        }\n\n        newWord = '';\n      }\n    }\n  } // MARK: Order words\n\n\n  let sortedWords = Object.keys(words).sort(function (a, b) {\n    return words[b] - words[a];\n  });\n  let items = [];\n\n  for (let i = 0; i < totalWords; i++) {\n    items.push( /*#__PURE__*/React.createElement(Button, {\n      className: \"m-1\",\n      key: [i],\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }\n    }, sortedWords[i]));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-inline-flex align-items-center align-self-center bg-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-primary pull-right\",\n    variant: \"secondary\",\n    onClick: () => setTotalWords(totalWords + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"+\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-primary pull-right\",\n    variant: \"secondary\",\n    onClick: () => setTotalWords(totalWords - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"-\"), ' '), /*#__PURE__*/React.createElement(Jumbotron, {\n    className: \"align-items-center align-self-center text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Most Used Words:\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Star Wars\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"d-inline-flex w-75 flex-wrap justify\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, items)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/synesis/Documents/Developer/word-counter-by-jayden/src/App.js"],"names":["React","useState","script","Button","Jumbotron","App","totalWords","setTotalWords","words","newWord","char","replace","toLowerCase","length","sortedWords","Object","keys","sort","a","b","items","i","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\nimport script from './components/StarWars'\nimport { Button, Jumbotron } from 'react-bootstrap'\n\nfunction App() {\n  const [ totalWords, setTotalWords ] = useState(80)\n\n  // MARK: Define text objects\n  let words = {}\n  let newWord = ''\n\n  // MARK: Get data\n\n  // MARK: Iterate over words in list and place into new object\n  for(const char of script) {\n    if(char !== \" \") {\n      newWord += char.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()\\n 0-9]/g, \"\").toLowerCase()\n    } else {\n      if(newWord.length > 1) {\n        if(words[newWord]) {\n          words[newWord] += 1\n        } else {\n          words[newWord] = 1\n        }\n        newWord = ''\n      }\n    }\n  }\n\n  // MARK: Order words\n  let sortedWords = Object.keys(words).sort(\n    function(a, b) {\n      return words[b] - words[a]\n  })\n\n  let items = []\n  for(let i = 0; i < totalWords; i++) {\n    items.push(<Button className=\"m-1\" key={[i]} variant=\"primary\">{sortedWords[i]}</Button>)\n  }\n\n  return (\n    <div className=\"d-inline-flex align-items-center align-self-center bg-primary\">\n\n      <span className=\"hover\">\n        <Button className=\"btn btn-primary pull-right\" variant=\"secondary\" onClick={() => setTotalWords(totalWords + 1)}>+</Button>{' '}\n        <Button className=\"btn btn-primary pull-right\" variant=\"secondary\" onClick={() => setTotalWords(totalWords - 1)}>-</Button>{' '}\n      </span>\n\n      <Jumbotron className=\"align-items-center align-self-center text-center\">\n        <h1>Most Used Words:</h1>\n        <h2>Star Wars</h2>\n        <br/>\n        <p className=\"d-inline-flex w-75 flex-wrap justify\">{items}</p>\n      </Jumbotron>\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}