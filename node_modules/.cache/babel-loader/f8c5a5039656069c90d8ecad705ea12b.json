{"ast":null,"code":"var _jsxFileName = \"/Users/synesis/Documents/Developer/word-counter-by-jayden/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport script from './components/StarWars';\n\nfunction App() {\n  // Create object to place word-list in\n  // Fetch data from source\n  // Iterate over each word in list\n  //    If word is new add word to object\n  //    If word is repeated incremenet count for word\n  // Print list of word bubbles in order of usage\n  // MARK: Define text objects\n  // TODO\n  let words = [];\n  let dictionary = {};\n  let count = 0;\n  let newWord = ''; // MARK: Get data\n  // TODO\n  // MARK: Iterate over words in list and place into new object\n\n  for (const char of script) {\n    // Saves me time\n    count += 1;\n\n    if (count > 10000) {\n      break;\n    } // Add string to new word until space\n\n\n    if (char !== \" \") {\n      newWord += char.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()\\n 0-9]/g, \"\");\n    } else {\n      if (words.includes(newWord)) {\n        words.newWord += 1;\n        console.log(words);\n        newWord = '';\n      } else {\n        words.push(newWord.toLowerCase());\n        dictionary += {\n          [newWord.toLowerCase()]: 1\n        };\n        newWord = '';\n      }\n    }\n  } // for(const word of words) {\n  //   console.log(word)\n  // }\n  // Order words\n\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, \"Hello world!\");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/synesis/Documents/Developer/word-counter-by-jayden/src/App.js"],"names":["React","script","App","words","dictionary","count","newWord","char","replace","includes","console","log","push","toLowerCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,SAASC,GAAT,GAAe;AACb;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,OAAO,GAAG,EAAd,CAba,CAeb;AACA;AAEA;;AACA,OAAI,MAAMC,IAAV,IAAkBN,MAAlB,EAA0B;AACxB;AACAI,IAAAA,KAAK,IAAI,CAAT;;AACA,QAAGA,KAAK,GAAG,KAAX,EAAkB;AAAC;AAAM,KAHD,CAKxB;;;AACA,QAAGE,IAAI,KAAK,GAAZ,EAAiB;AACfD,MAAAA,OAAO,IAAIC,IAAI,CAACC,OAAL,CAAa,oCAAb,EAAmD,EAAnD,CAAX;AACD,KAFD,MAEO;AACL,UAAGL,KAAK,CAACM,QAAN,CAAeH,OAAf,CAAH,EAA4B;AAC1BH,QAAAA,KAAK,CAACG,OAAN,IAAiB,CAAjB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACAG,QAAAA,OAAO,GAAG,EAAV;AACD,OAJD,MAIO;AACLH,QAAAA,KAAK,CAACS,IAAN,CAAWN,OAAO,CAACO,WAAR,EAAX;AACAT,QAAAA,UAAU,IAAI;AAAC,WAACE,OAAO,CAACO,WAAR,EAAD,GAAyB;AAA1B,SAAd;AACAP,QAAAA,OAAO,GAAG,EAAV;AACD;AACF;AACF,GAtCY,CAwCb;AACA;AACA;AAEA;;;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD;;AAED,eAAeJ,GAAf","sourcesContent":["import React from 'react'\nimport './App.css'\nimport script from './components/StarWars'\n\nfunction App() {\n  // Create object to place word-list in\n  // Fetch data from source\n  // Iterate over each word in list\n  //    If word is new add word to object\n  //    If word is repeated incremenet count for word\n  // Print list of word bubbles in order of usage\n\n  // MARK: Define text objects\n  // TODO\n  let words = []\n  let dictionary = {}\n  let count = 0\n  let newWord = ''\n\n  // MARK: Get data\n  // TODO\n\n  // MARK: Iterate over words in list and place into new object\n  for(const char of script) {\n    // Saves me time\n    count += 1\n    if(count > 10000) {break}\n    \n    // Add string to new word until space\n    if(char !== \" \") {\n      newWord += char.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()\\n 0-9]/g, \"\")\n    } else {\n      if(words.includes(newWord)) {\n        words.newWord += 1\n        console.log(words)\n        newWord = ''\n      } else {\n        words.push(newWord.toLowerCase())\n        dictionary += {[newWord.toLowerCase()]: 1}\n        newWord = ''\n      }\n    }\n  }\n\n  // for(const word of words) {\n  //   console.log(word)\n  // }\n\n  // Order words\n  \n\n  return (\n    <h1>Hello world!</h1>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}